// ===============================================================================
// SYST√àME D'ALERTES FRENCHOY - Templates et Configuration
// ===============================================================================
//
// Ce fichier d√©finit tous les types d'alertes disponibles dans le syst√®me.
// Le moteur d'alertes (alert-engine.ts) utilise ces templates pour :
// 1. Collecter les donn√©es depuis la base de donn√©es
// 2. √âvaluer les conditions d√©finies par l'utilisateur
// 3. G√©n√©rer des messages format√©s avec variables dynamiques
// 4. Envoyer les notifications via Discord/Telegram/In-App
//
// MIGRATION 2024+ : Le syst√®me utilise maintenant TrainInstance au lieu de TrainSlot
// pour une gestion plus flexible et pr√©cise des horaires de trains.
//
// STRUCTURE :
// - AlertTemplate : d√©finit un type d'alerte (variables, message, exemples)
// - AlertVariable : une variable dynamique dans le message (ex: {coveragePercent})
// - AlertExample : exemples de configuration pour aider l'utilisateur
//
// COMMENT AJOUTER UN NOUVEAU TYPE D'ALERTE :
// 1. Ajouter le template dans ALERT_TEMPLATES
// 2. Ajouter la collecte de donn√©es dans alert-engine.ts (collectData method)
// 3. Optionnellement ajouter des comparaisons sp√©cifiques
//
// VARIABLES DYNAMIQUES :
// Les messages peuvent contenir des variables entre accolades : {variableName}
// Le formatage est automatique selon le type (percentage, number, date, string)
//
// EXEMPLES DE VARIABLES :
// {coveragePercent} ‚Üí 85.2%
// {totalPower:0,0} ‚Üí 1,234,567,890 (formatage personnalis√©)
// {eventDate} ‚Üí 15/12/2024 14:30
//
// ===============================================================================

// Syst√®me de templates pour les alertes avec variables dynamiques
// Utilise le nouveau syst√®me TrainInstance (+ 2024) au lieu de l'ancien TrainSlot

export interface AlertTemplate {
  type: string;
  name: string;
  description: string;
  category: string;
  icon: string;
  defaultConditions: any;
  availableComparisons: string[];
  variables: AlertVariable[];
  messageTemplate: string;
  examples: AlertExample[];
}

export interface AlertVariable {
  key: string;
  name: string;
  description: string;
  type: "number" | "string" | "percentage" | "date" | "boolean";
  format?: string; // Format d'affichage (ex: "0,0", "0.0%", "DD/MM/YYYY")
}

export interface AlertExample {
  condition: any;
  description: string;
  messagePreview: string;
}

// Templates d'alertes avec documentation mise √† jour
export const ALERT_TEMPLATES: Record<string, AlertTemplate> = {
  TRAIN_COVERAGE: {
    type: "TRAIN_COVERAGE",
    name: "Couverture des Trains",
    description:
      "Surveille le pourcentage d'instances de trains assign√©es √† un conducteur (14 prochains jours)",
    category: "Trains",
    icon: "üöÇ",
    defaultConditions: {
      threshold: 80,
      comparison: "less_than",
      timeframe: null,
    },
    availableComparisons: ["less_than", "greater_than", "equals"],
    variables: [
      {
        key: "coveragePercent",
        name: "Pourcentage de couverture",
        description: "Pourcentage d'instances assign√©es",
        type: "percentage",
        format: "0.0%",
      },
      {
        key: "assignedSlots",
        name: "Instances assign√©es",
        description: "Nombre d'instances avec un conducteur",
        type: "number",
        format: "0,0",
      },
      {
        key: "totalSlots",
        name: "Total instances",
        description: "Nombre total d'instances de trains (14 jours)",
        type: "number",
        format: "0,0",
      },
      {
        key: "missingSlots",
        name: "Instances manquantes",
        description: "Nombre d'instances sans conducteur",
        type: "number",
        format: "0,0",
      },
    ],
    messageTemplate:
      "‚ö†Ô∏è Couverture des trains insuffisante !\n\nüìä **Statistiques actuelles :**\n‚Ä¢ Couverture : {coveragePercent}\n‚Ä¢ Instances assign√©es : {assignedSlots}/{totalSlots}\n‚Ä¢ Instances manquantes : {missingSlots}\n\nüéØ **Seuil configur√© :** < {threshold}%\n\nüìÖ **P√©riode :** 14 prochains jours",
    examples: [
      {
        condition: { threshold: 80, comparison: "less_than" },
        description: "Alerte si moins de 80% des trains sont couverts",
        messagePreview:
          "‚ö†Ô∏è Couverture des trains insuffisante ! Couverture : 65%",
      },
      {
        condition: { threshold: 100, comparison: "less_than" },
        description: "Alerte d√®s qu'un train n'a pas de conducteur",
        messagePreview:
          "‚ö†Ô∏è Couverture des trains insuffisante ! Couverture : 85%",
      },
    ],
  },

  INACTIVE_MEMBERS: {
    type: "INACTIVE_MEMBERS",
    name: "Membres Inactifs",
    description:
      "Surveille le nombre de membres inactifs depuis X jours (bas√© sur lastActive)",
    category: "Membres",
    icon: "üò¥",
    defaultConditions: {
      threshold: 5,
      comparison: "greater_than",
      timeframe: 7, // jours
    },
    availableComparisons: ["greater_than", "greater_than_or_equal", "equals"],
    variables: [
      {
        key: "inactiveCount",
        name: "Nombre d'inactifs",
        description: "Nombre de membres inactifs",
        type: "number",
        format: "0,0",
      },
      {
        key: "inactiveDays",
        name: "Jours d'inactivit√©",
        description: "Seuil de jours d'inactivit√©",
        type: "number",
        format: "0",
      },
      {
        key: "totalActiveMembers",
        name: "Total membres actifs",
        description: "Nombre total de membres actifs",
        type: "number",
        format: "0,0",
      },
      {
        key: "inactivePercent",
        name: "Pourcentage d'inactifs",
        description: "Pourcentage de membres inactifs",
        type: "percentage",
        format: "0.0%",
      },
    ],
    messageTemplate:
      "üò¥ **Membres inactifs d√©tect√©s !**\n\nüìä **D√©tails :**\n‚Ä¢ {inactiveCount} membre(s) inactif(s) depuis plus de {inactiveDays} jours\n‚Ä¢ {inactivePercent} des membres actifs\n‚Ä¢ Total membres actifs : {totalActiveMembers}\n\nüéØ **Seuil configur√© :** > {threshold} membres",
    examples: [
      {
        condition: { threshold: 5, comparison: "greater_than", timeframe: 7 },
        description: "Alerte si plus de 5 membres sont inactifs depuis 7 jours",
        messagePreview:
          "üò¥ Membres inactifs d√©tect√©s ! 8 membres inactifs depuis plus de 7 jours",
      },
      {
        condition: { threshold: 3, comparison: "greater_than", timeframe: 14 },
        description:
          "Alerte si plus de 3 membres sont inactifs depuis 14 jours",
        messagePreview:
          "üò¥ Membres inactifs d√©tect√©s ! 5 membres inactifs depuis plus de 14 jours",
      },
    ],
  },

  MISSING_CONDUCTOR: {
    type: "MISSING_CONDUCTOR",
    name: "Conducteurs Manquants",
    description:
      "Alerte quand des instances de train n'ont pas de conducteur (prochaines 48h)",
    category: "Trains",
    icon: "üë§",
    defaultConditions: {
      threshold: 0,
      comparison: "greater_than",
      timeframe: 48, // heures √† l'avance
    },
    availableComparisons: ["greater_than", "greater_than_or_equal", "equals"],
    variables: [
      {
        key: "missingConductors",
        name: "Conducteurs manquants",
        description: "Nombre d'instances sans conducteur",
        type: "number",
        format: "0,0",
      },
      {
        key: "totalInstances",
        name: "Total instances",
        description: "Nombre total d'instances dans la p√©riode",
        type: "number",
        format: "0,0",
      },
      {
        key: "timeframeHours",
        name: "P√©riode (heures)",
        description: "P√©riode de surveillance en heures",
        type: "number",
        format: "0",
      },
      {
        key: "missingList",
        name: "Liste des instances",
        description: "D√©tails des instances sans conducteur",
        type: "string",
      },
    ],
    messageTemplate:
      "üë§ **Conducteurs manquants !**\n\nüöÇ **Instances sans conducteur :**\n‚Ä¢ {missingConductors} instance(s) sur {totalInstances}\n‚Ä¢ Prochaines {timeframeHours}h\n\nüìã **D√©tails :**\n{missingList}\n\n‚ö° **Action requise :** Assigner des conducteurs rapidement",
    examples: [
      {
        condition: { threshold: 0, comparison: "greater_than", timeframe: 48 },
        description: "Alerte d√®s qu'une instance n'a pas de conducteur (48h)",
        messagePreview:
          "üë§ Conducteurs manquants ! 2 instances sans conducteur",
      },
      {
        condition: { threshold: 1, comparison: "greater_than", timeframe: 24 },
        description: "Alerte si plus d'une instance manque de conducteur (24h)",
        messagePreview:
          "üë§ Conducteurs manquants ! 3 instances sans conducteur",
      },
    ],
  },

  MEMBER_THRESHOLD: {
    type: "MEMBER_THRESHOLD",
    name: "Seuil de Membres",
    description:
      "Surveille le nombre total de membres actifs (bas√© sur isActive dans la table Member)",
    category: "Membres",
    icon: "üë•",
    defaultConditions: {
      threshold: 50,
      comparison: "less_than",
      timeframe: null,
    },
    availableComparisons: ["less_than", "greater_than", "equals"],
    variables: [
      {
        key: "activeMembers",
        name: "Membres actifs",
        description: "Nombre de membres actifs",
        type: "number",
        format: "0,0",
      },
      {
        key: "maxMembers",
        name: "Limite alliance",
        description: "Limite maximale de l'alliance (100 par d√©faut)",
        type: "number",
        format: "0,0",
      },
      {
        key: "memberPercent",
        name: "Pourcentage de remplissage",
        description: "Pourcentage de l'alliance remplie",
        type: "percentage",
        format: "0.0%",
      },
    ],
    messageTemplate:
      "üë• **Seuil de membres atteint !**\n\nüìä **Effectifs actuels :**\n‚Ä¢ Membres actifs : {activeMembers}\n‚Ä¢ Limite alliance : {maxMembers}\n‚Ä¢ Taux de remplissage : {memberPercent}\n\nüéØ **Seuil configur√© :** {comparison} {threshold} membres",
    examples: [
      {
        condition: { threshold: 50, comparison: "less_than" },
        description: "Alerte si moins de 50 membres actifs",
        messagePreview: "üë• Seuil de membres atteint ! 45 membres actifs",
      },
      {
        condition: { threshold: 90, comparison: "greater_than" },
        description: "Alerte si plus de 90 membres (alliance presque pleine)",
        messagePreview: "üë• Seuil de membres atteint ! 95 membres actifs",
      },
    ],
  },

  POWER_THRESHOLD: {
    type: "POWER_THRESHOLD",
    name: "Seuil de Puissance",
    description:
      "Surveille la puissance totale de l'alliance (somme des power de tous les membres actifs)",
    category: "Alliance",
    icon: "‚ö°",
    defaultConditions: {
      threshold: 1000000000, // 1 milliard
      comparison: "less_than",
      timeframe: null,
    },
    availableComparisons: ["less_than", "greater_than", "equals"],
    variables: [
      {
        key: "totalPower",
        name: "Puissance totale",
        description: "Puissance totale de l'alliance",
        type: "number",
        format: "0,0",
      },
      {
        key: "averagePower",
        name: "Puissance moyenne",
        description: "Puissance moyenne par membre actif",
        type: "number",
        format: "0,0",
      },
      {
        key: "activeMembers",
        name: "Membres actifs",
        description: "Nombre de membres actifs inclus dans le calcul",
        type: "number",
        format: "0,0",
      },
      {
        key: "powerGrowth",
        name: "Croissance",
        description: "√âvolution de puissance (non impl√©ment√© actuellement)",
        type: "string",
      },
    ],
    messageTemplate:
      "‚ö° **Seuil de puissance atteint !**\n\nüí™ **Statistiques de puissance :**\n‚Ä¢ Puissance totale : {totalPower:0,0}\n‚Ä¢ Puissance moyenne : {averagePower:0,0} par membre\n‚Ä¢ Membres actifs : {activeMembers}\n\nüéØ **Seuil configur√© :** {comparison} {threshold:0,0}",
    examples: [
      {
        condition: { threshold: 1000000000, comparison: "greater_than" },
        description: "Alerte quand l'alliance d√©passe 1 milliard de puissance",
        messagePreview:
          "‚ö° Seuil de puissance atteint ! Puissance totale : 1,200,000,000",
      },
      {
        condition: { threshold: 500000000, comparison: "less_than" },
        description: "Alerte si l'alliance descend sous 500 millions",
        messagePreview:
          "‚ö° Seuil de puissance atteint ! Puissance totale : 450,000,000",
      },
    ],
  },

  EVENT_REMINDER: {
    type: "EVENT_REMINDER",
    name: "Rappel d'√âv√©nement",
    description:
      "Rappels avant les √©v√©nements importants (VS, Desert Storm, autres √©v√©nements syst√®me)",
    category: "√âv√©nements",
    icon: "üìÖ",
    defaultConditions: {
      threshold: 2, // heures avant
      comparison: "equals",
      timeframe: 24, // chercher dans les prochaines 24h
    },
    availableComparisons: ["equals", "less_than_or_equal"],
    variables: [
      {
        key: "eventTitle",
        name: "Nom de l'√©v√©nement",
        description: "Titre de l'√©v√©nement",
        type: "string",
      },
      {
        key: "eventType",
        name: "Type d'√©v√©nement",
        description: "Cat√©gorie de l'√©v√©nement (VS, Desert Storm, etc.)",
        type: "string",
      },
      {
        key: "timeUntilEvent",
        name: "Temps restant",
        description: "Temps avant l'√©v√©nement",
        type: "string",
      },
      {
        key: "eventDate",
        name: "Date de l'√©v√©nement",
        description: "Date et heure de l'√©v√©nement",
        type: "date",
        format: "DD/MM/YYYY HH:mm",
      },
    ],
    messageTemplate:
      "üìÖ **Rappel d'√âv√©nement !**\n\nüéØ **{eventTitle}**\n‚Ä¢ Type : {eventType}\n‚Ä¢ D√©but : {eventDate}\n‚Ä¢ Dans : {timeUntilEvent}\n\n‚ö†Ô∏è **Pr√©parez-vous !** L'√©v√©nement commence bient√¥t.",
    examples: [
      {
        condition: { threshold: 2, comparison: "equals", timeframe: 24 },
        description: "Rappel 2 heures avant chaque √©v√©nement",
        messagePreview:
          "üìÖ Rappel d'√âv√©nement ! Guerre d'Alliance dans 2 heures",
      },
      {
        condition: {
          threshold: 30,
          comparison: "less_than_or_equal",
          timeframe: 60,
        },
        description: "Rappel 30 minutes avant chaque √©v√©nement",
        messagePreview: "üìÖ Rappel d'√âv√©nement ! Boss Fight dans 15 minutes",
      },
    ],
  },

  TRAIN_DEPARTURE: {
    type: "TRAIN_DEPARTURE",
    name: "D√©part de Train",
    description:
      "Alerte X minutes avant le d√©part d'instances de train (avec status SCHEDULED/BOARDING)",
    category: "Trains",
    icon: "üöÄ",
    defaultConditions: {
      threshold: 1,
      comparison: "greater_than_or_equal",
      minutesBefore: 30,
    },
    availableComparisons: ["greater_than_or_equal", "greater_than", "equals"],
    variables: [
      {
        key: "trainCount",
        name: "Nombre de trains",
        description: "Nombre d'instances qui partent bient√¥t",
        type: "number",
        format: "0",
      },
      {
        key: "minutesBefore",
        name: "Minutes d'avance",
        description: "Nombre de minutes avant le d√©part",
        type: "number",
        format: "0",
      },
      {
        key: "trainsList",
        name: "Liste des trains",
        description: "D√©tails des instances qui partent",
        type: "string",
      },
      {
        key: "nextTrains",
        name: "Prochains trains",
        description: "Horaires des prochaines instances",
        type: "string",
      },
    ],
    messageTemplate:
      "üöÄ **D√©part de train imminent !**\n\nüöÇ **Instances concern√©es :**\n{trainsList}\n\n‚è∞ **Dans {minutesBefore} minutes ou moins**\n\nüéØ **Pr√©parez-vous pour le d√©part !**",
    examples: [
      {
        condition: {
          threshold: 1,
          comparison: "greater_than_or_equal",
          minutesBefore: 30,
        },
        description: "Alerte 30 minutes avant le d√©part d'une instance",
        messagePreview:
          "üöÄ D√©part de train imminent ! Conductor123 (lundi 20:00 - dans 25min)",
      },
      {
        condition: {
          threshold: 1,
          comparison: "greater_than_or_equal",
          minutesBefore: 15,
        },
        description: "Alerte 15 minutes avant le d√©part",
        messagePreview:
          "üöÄ D√©part de train imminent ! Conductor456 (mardi 14:00 - dans 10min)",
      },
    ],
  },

  MANUAL_MESSAGE: {
    type: "MANUAL_MESSAGE",
    name: "Message Manuel",
    description:
      "Envoi d'un message personnalis√© avec un niveau d'alerte (pour communications importantes)",
    category: "Communication",
    icon: "üì¢",
    defaultConditions: {
      threshold: true,
      comparison: "equals",
      message: "",
      title: "Notification",
    },
    availableComparisons: ["equals"],
    variables: [
      {
        key: "message",
        name: "Message",
        description: "Contenu du message personnalis√©",
        type: "string",
      },
      {
        key: "title",
        name: "Titre",
        description: "Titre de la notification",
        type: "string",
      },
    ],
    messageTemplate: "üì¢ **{title}**\n\n{message}",
    examples: [
      {
        condition: {
          message:
            "Maintenance serveur pr√©vue demain 14h-16h. Pr√©parez vos actions importantes avant.",
          title: "Maintenance Programm√©e",
        },
        description: "Message de maintenance avec d√©tails",
        messagePreview:
          "üì¢ Maintenance Programm√©e - Maintenance serveur pr√©vue demain 14h-16h",
      },
      {
        condition: {
          message:
            "Nouvelle version v2.1 d√©ploy√©e ! Nouvelles fonctionnalit√©s : Desert Storm am√©lior√©, alertes optimis√©es.",
          title: "Mise √† jour",
        },
        description: "Annonce de nouvelle version",
        messagePreview:
          "üì¢ Mise √† jour - Nouvelle version v2.1 d√©ploy√©e ! Nouvelles fonctionnalit√©s...",
      },
      {
        condition: {
          message:
            "Guerre d'alliance importante demain 20h ! Tous les conducteurs doivent √™tre pr√©sents.",
          title: "√âv√©nement Critique",
        },
        description: "Alerte pour √©v√©nement critique",
        messagePreview:
          "üì¢ √âv√©nement Critique - Guerre d'alliance importante demain 20h !",
      },
    ],
  },
};

// Fonction pour remplacer les variables dans un template
export function replaceVariables(
  template: string,
  variables: Record<string, any>,
  conditions?: any
): string {
  let result = template;

  // Remplacer les variables de donn√©es
  Object.entries(variables).forEach(([key, value]) => {
    const regex = new RegExp(`{${key}(?::[^}]+)?}`, "g");
    result = result.replace(regex, formatValue(value, key));
  });

  // Remplacer les variables de conditions
  if (conditions) {
    Object.entries(conditions).forEach(([key, value]) => {
      const regex = new RegExp(`{${key}(?::[^}]+)?}`, "g");
      result = result.replace(regex, formatValue(value, key));
    });

    // Remplacer la comparaison par un texte lisible
    if (conditions.comparison) {
      const comparisonText = getComparisonText(conditions.comparison);
      result = result.replace(/{comparison}/g, comparisonText);
    }
  }

  return result;
}

// Formater une valeur selon son type
function formatValue(value: any, key: string): string {
  if (value === null || value === undefined) return "N/A";

  // D√©terminer le type de formatage selon la cl√©
  if (key.includes("Percent") || key.includes("percent")) {
    return `${Number(value).toFixed(1)}%`;
  }

  if (key.includes("Power") || key.includes("power")) {
    return Number(value).toLocaleString();
  }

  if (key.includes("Date") || key.includes("date")) {
    return new Date(value).toLocaleDateString("fr-FR", {
      day: "2-digit",
      month: "2-digit",
      year: "numeric",
      hour: "2-digit",
      minute: "2-digit",
    });
  }

  if (typeof value === "number") {
    return value.toLocaleString();
  }

  return String(value);
}

// Convertir les comparaisons en texte lisible
function getComparisonText(comparison: string): string {
  const texts: Record<string, string> = {
    less_than: "inf√©rieur √†",
    greater_than: "sup√©rieur √†",
    equals: "√©gal √†",
    less_than_or_equal: "inf√©rieur ou √©gal √†",
    greater_than_or_equal: "sup√©rieur ou √©gal √†",
  };

  return texts[comparison] || comparison;
}

// Obtenir les comparaisons disponibles avec leurs labels
export function getAvailableComparisons() {
  return [
    { value: "less_than", label: "Inf√©rieur √† (<)" },
    { value: "greater_than", label: "Sup√©rieur √† (>)" },
    { value: "equals", label: "√âgal √† (=)" },
    { value: "less_than_or_equal", label: "Inf√©rieur ou √©gal √† (‚â§)" },
    { value: "greater_than_or_equal", label: "Sup√©rieur ou √©gal √† (‚â•)" },
  ];
}

// Valider une condition
export function validateCondition(type: string, conditions: any): string[] {
  const template = ALERT_TEMPLATES[type];
  if (!template) return ["Type d'alerte invalide"];

  const errors: string[] = [];

  if (typeof conditions.threshold === "undefined") {
    errors.push("Seuil requis");
  }

  if (!conditions.comparison) {
    errors.push("Comparaison requise");
  } else if (!template.availableComparisons.includes(conditions.comparison)) {
    errors.push("Comparaison non support√©e pour ce type d'alerte");
  }

  return errors;
}
